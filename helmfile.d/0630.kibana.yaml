helmDefaults:
  args:
  - "--wait"
  - "--timeout=600"
  - "--force"
  - "--reset-values"

repositories:
# Stable repo of official helm charts
- name: "stable"
  url: "https://kubernetes-charts.storage.googleapis.com"

releases:

#######################################################################################
## Kibana                                                                            ##
## Open source, browser-based analytics and search dashboard for Elasticsearch       ##
#######################################################################################

#
# References:
#   - https://github.com/helm/charts/blob/master/stable/kibana/values.yaml
#
- name: "kibana"
  namespace: "monitoring"
  labels:
    chart: "kibana"
    component: "monitoring"
    namespace: "monitoring"
    vendor: "kubernetes-helm"
    default: "false"
  chart: "stable/kibana"
  version: "0.10.0"
  values:
  - replicaCount: '{{ env "KIBANA_REPLICA_COUNT" | default 1 }}'
    image:
      repository: "docker.elastic.co/kibana/kibana-oss"
      tag: '{{ env "KIBANA_IMAGE_TAG" | default "6.3.1" }}'
      pullPolicy: "IfNotPresent"
    service:
      type: ClusterIP
      externalPort: "443"
      internalPort: '{{ env "KIBANA_SERVER_PORT" | default "5601" }}'
      annotations:
        iam.amazonaws.com/role: '{{ env "ELASTICSEARCH_IAM_ROLE" }}'
      labels:
        # Show service URL in `kubectl cluster-info`
        kubernetes.io/cluster-service: "true"
    resources:
      limits:
        cpu: "500m"
        memory: "1024Mi"
      requests:
        cpu: "200m"
        memory: "512Mi"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
        kubernetes.io/tls-acme: "true"
        external-dns.alpha.kubernetes.io/ttl: "60"
        external-dns.alpha.kubernetes.io/target: '{{ env "KIBANA_INGRESS" }}'
        external-dns.alpha.kubernetes.io/hostname: '{{ env "KIBANA_HOSTNAME" }}'
      hosts:
      - '{{ env "KIBANA_HOSTNAME" }}'
      tls:
      - secretName: '{{ env "KIBANA_SECRET_NAME" | default "kibana-server-tls" }}'
        hosts:
        - '{{ env "KIBANA_HOSTNAME" }}'
    files:
      kibana.yml:
        ## Default Kibana configuration from kibana-docker.
        server:
          name: "kibana"
          host: '{{ env "KIBANA_SERVER_HOST" | default "localhost" }}'
          port: '{{ env "KIBANA_SERVER_PORT" | default "5601" }}'
          defaultRoute: "/app/kibana"
        elasticsearch:
          url: '{{ env "ELASTICSEARCH_HOST" | default "elasticsearch" }}:{{ env "ELASTICSEARCH_PORT" | default "80" }}'

        ## Custom config properties
        ## Ref: https://www.elastic.co/guide/en/kibana/current/settings.html
        logging:
          verbose: "false"
    env:
      # All Kibana configuration options are adjustable via env vars.
      # To adjust a config option to an env var uppercase + replace `.` with `_`
      # Ref: https://www.elastic.co/guide/en/kibana/current/settings.html
      ELASTICSEARCH_URL: '{{ env "ELASTICSEARCH_HOST" | default "elasticsearch" }}:{{ env "ELASTICSEARCH_PORT" | default "80" }}'
      SERVER_PORT: '{{ env "KIBANA_SERVER_PORT" | default "5601" }}'
