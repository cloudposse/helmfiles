helmDefaults:
  args:
    - "--wait"
    - "--timeout=600" 
    - "--force"
    - "--reset-values"

repositories:
# Stable repo of official helm charts
- name: "stable"
  url: "https://kubernetes-charts.storage.googleapis.com"

releases:

#######################################################################################
## Grafana                                                                           ##
#######################################################################################

- name: "grafana"
  namespace: "monitoring"
  labels:
    chart: "grafana"
    component: "monitoring"
    namespace: "monitoring"
    vendor: "kubernetes"
    default: "false"
  chart: "stable/grafana"
  version: "1.12.0"
  values:
    ### Optional: GRAFANA_EXTERNAL_VALUES_FILE;
    - '{{ env "GRAFANA_EXTERNAL_VALUES_FILE" | default "values/grafana.dashboards.yaml" }}'
    - rbac:
        create: false
        pspEnabled: false
      serviceAccount:
        ### Optional: GRAFANA_SERVICE_ACCOUT_CREATE;
        create: '{{ env "GRAFANA_SERVICE_ACCOUT_CREATE" | default "true" }}'
        ### Optional: GRAFANA_SERVICE_ACCOUT_NAME;
        name: '{{ env "GRAFANA_SERVICE_ACCOUT_NAME" | default "grafana" }}'
      persistence:
        enabled: true
        ### Optional: GRAFANA_PERSISTENCE_SIZE;
        size: '{{ env "GRAFANA_PERSISTENCE_SIZE" | default "10Gi" }}'
        accessModes:
          - ReadWriteOnce
      adminUser: '{{ env "GRAFANA_ADMIN_USER" | default "admin" }}'
      adminPassword: '{{ env "GRAFANA_ADMIN_PASSWORD" | default "changeme" }}'

      # Sidecars that collect the configmaps with specified label and stores the included files them into the respective folders,
      # require at least Grafana 5 to work and can't be used together with parameters dashboardProviders, datasources and dashboards

      datasources: {}
      dashboardProviders: {}
      dashboards:
        default: {}

      sidecar:
        resources:
      #   limits:
      #     cpu: 100m
      #     memory: 100Mi
      #   requests:
      #     cpu: 50m
      #     memory: 50Mi
        dashboards:
          enabled: true
          # label that the configmaps with dashboards are marked with
          label: grafana_dashboard
          # folder in the pod that should hold the collected dashboards
          folder: /tmp/dashboards
        datasources:
          enabled: true
          # label that the configmaps with datasources are marked with
          label: grafana_datasource

      resources:
        limits:
          cpu: "50m"
          memory: "64Mi"
        requests:
          cpu: "10m"
          memory: "64Mi"
      ingress:
        ### Optional: GRAFANA_INGRESS_ENABLED;
        enabled: '{{ env "GRAFANA_INGRESS_ENABLED" | default "false" }}'
{{ if eq (env "GRAFANA_INGRESS_ENABLED" | default "false") "true" }}
        annotations:
          kubernetes.io/ingress.class: "nginx"
          kubernetes.io/tls-acme: "true"
          external-dns.alpha.kubernetes.io/ttl: "60"
          ### Required: GRAFANA_INGRESS;
          external-dns.alpha.kubernetes.io/target: '{{ env "GRAFANA_INGRESS" }}'
          ### Required: GRAFANA_HOSTNAME;
          external-dns.alpha.kubernetes.io/hostname: '{{ env "GRAFANA_HOSTNAME" }}'
        hosts:
          ### Required: GRAFANA_HOSTNAME;
          - '{{ env "GRAFANA_HOSTNAME" }}'
        tls:
            ### Optional: GRAFANA_SECRET_NAME;
          - secretName: '{{ env "GRAFANA_SECRET_NAME" | default "grafana-server-tls" }}'
            hosts:
              ### Required: GRAFANA_HOSTNAME;
              - '{{ env "GRAFANA_HOSTNAME" }}'
{{ end }}
