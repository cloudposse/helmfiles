repositories:
# No official chart, this user's chart seems to be the best there is
- name: "gabibbo97"
  url: "https://gabibbo97.github.io/charts/"

######
# You need to create a gatekeeper.yaml file with an array of services, with values that do not use go templating
# Here is an example:, with comments. Most elements can be omitted
# services:
#    - name: dashboard  # the service name
#      portalName: "Kubernetes Dashboard"  # The name as it should appear in the Forecastle portal (omit to hide)
#      host: dashboard.us-west-2.corp.cpco.io # The DNS name of the public endpoint
#      useTLS: false  # True to generate a TLS certificate and use an HTTPS endpoint
#      upstream: https://kubernetes-dashboard.kube-system.svc.cluster.local  # The service URL
#      skipUpstreamTlsVerify: true # True to skip the validity check of the TLS certificate of the upstream URL
#      rules: # Array of access control rules
#        - "uri=/*|roles=kube-admin"
#      replicas: 1 # number of replicas
#    - name: forecastle
#      debug: true
#      host: forecastle.us-west-2.corp.cpco.io
#      upstream: http://forecastle.kube-system.svc.cluster.local
#      rules:
#        - "uri=/*|roles=kube-admin,user|require-any-role=true"
######

#
environments:
  default:
    values:
     - ../gatekeeper.yaml

releases:

#######################################################################################
## keycloak-gatekeeper (formerly keycloak-proxy)                                     ##
## keycloak-gatekeeper is an open source identity-aware proxy                        ##
#######################################################################################

#
# References:
#   - https://github.com/gabibbo97/charts/tree/master/charts/keycloak-gatekeeper
#   - https://hub.helm.sh/charts/gabibbo97/keycloak-gatekeeper
#   - https://www.keycloak.org/
#
{{ range $index, $service := .Environment.Values.services }}
- name: "key-gate-{{- $service.name }}"
  namespace: "kube-system"
  labels:
    chart: "keycloak-gatekeeper"
    repo: "gabibbo97"
    component: "iap"
    namespace: "kube-system"
    vendor: "keycloak"
    default: "false"
  chart: "gabibbo97/keycloak-gatekeeper"
  version: "1.1.1"
  wait: false
  installed: true
  values:
  - nameOverride: "key-gate-{{- $service.name }}"
    fullNameOverride: "key-gate-{{- $service.name }}"
    image:
      tag: 5.0.0
      pullPolicy: "IfNotPresent"
    debug: {{ index $service "debug" | default "false" }}
    replicas: {{ index $service "replicas" | default 1 }}
    ingress:
      enabled: '{{ env "KEYCLOAK_GATEKEEPER_INGRESS_ENABLED" | default "true" }}'
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
        kubernetes.io/tls-acme: "{{ index $service "useTLS" | default "false" }}"
        external-dns.alpha.kubernetes.io/target: '{{ requiredEnv "NGINX_INGRESS_HOSTNAME" }}'
        external-dns.alpha.kubernetes.io/ttl: "60"
        {{- if index $service "portalName"  }}
        forecastle.stakater.com/expose: "true"
        forecastle.stakater.com/appName: "{{ $service.portalName }}"
        {{- end }}
      hosts:
      - {{ $service.host }}
      # tls:
      #  - secretName: keycloak-http-tls
      #    hosts:  [{{ env "KEYCLOAK_INGRESS_HOSTS" }}]
    discoveryURL: '{{- requiredEnv "KOPS_OIDC_ISSUER_URL" }}'
    upstreamURL: '{{- $service.upstream }}'
    skipUpstreamTlsVerify: {{ index $service "skipUpstreamTlsVerify" | default "false" }}
    ClientID: 'kubernetes'
    ClientSecret: '{{- requiredEnv "KEYCLOAK_GATEKEEPER_DASHBOARD_CLIENT_SECRET" }}'
    scopes:
      - roles
    rules:
      {{- range $i, $rule := $service.rules }}
      - "{{ $rule }}"
      {{- end }}
    ### Optional: RBAC_ENABLED;
    rbac:
      create: {{ env "RBAC_ENABLED" | default "false" }}
    serviceAccount:
      create: {{ env "RBAC_ENABLED" | default "false" }}
      name: "key-gate-{{- $service.name }}"
    livenessProbe:
      timeoutSeconds: 60
    readinessProbe:
      timeoutSeconds: 90
    resources:
      limits:
        cpu: "100m"
        memory: "128Mi"
      requests:
        cpu: "10m"
        memory: "10Mi"
{{- end }}
