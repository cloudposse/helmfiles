bases:
- environments.yaml
---
repositories:
# Stable repo of official helm charts, deprecated, but no official replacement yet.
# Possibly use https://charts.bitnami.com/bitnami but it is different chart
- name: "stable"
  url: "https://charts.helm.sh/stable"

releases:

# https://github.com/kubernetes-sigs/metrics-server
# https://github.com/helm/charts/tree/master/stable/metrics-server

- name: "metrics-server"
  namespace: "kube-system"
  labels:
    chart: "metrics-server"
    repo: "stable"
    component: "hpa"
    namespace: "kube-system"
    vendor: "kubernetes"
  chart: "stable/metrics-server"
  version: {{ .Values.chart_version | quote }}
  wait: true
  atomic: true
  cleanupOnFail: true
  timeout: 180
  installed: {{ .Values.installed }}
  values:
  - rbac:
      create: true
      pspEnabled: false

    serviceAccount:
      # Specifies whether a ServiceAccount should be created
      create: true
      # The name of the ServiceAccount to use.
      # If not set and create is true, a name is generated using the fullname template
      name: {{ .Values.service_account_name | quote }}

    apiService:
      # Specifies if the v1beta1.metrics.k8s.io API service should be created.
      # You typically want this enabled! If you disable API service creation you have to
      # manage it outside of this chart for e.g horizontal pod autoscaling to
      # work with this release.
      create: true

    hostNetwork:
      # Specifies if metrics-server should be started in hostNetwork mode.
      # You would require this enabled if you use alternate overlay networking for pods and
      # API server unable to communicate with metrics-server. As an example, this is required
      # if you use Weave network on EKS
      enabled: false

    image:
      repository: {{ .Values.image_repository | quote }}
      tag: {{ .Values.image_tag | quote }}
      pullPolicy: IfNotPresent

    # Defaults are fine for EKS
    # See https://docs.aws.amazon.com/eks/latest/userguide/metrics-server.html
    # args:
    #   - --kubelet-preferred-address-types=InternalIP,InternalDNS,ExternalDNS,ExternalIP,Hostname
    #   - --kubelet-insecure-tls

    resources:
      limits:
        cpu: {{ .Values.limit_cpu | quote }}
        memory: {{ .Values.limit_memory | quote }}
      requests:
        cpu: {{ .Values.request_cpu | quote }}
        memory: {{ .Values.request_memory | quote }}

    livenessProbe:
      httpGet:
        path: /healthz
        port: https
        scheme: HTTPS
      initialDelaySeconds: 20

    readinessProbe:
      httpGet:
        path: /healthz
        port: https
        scheme: HTTPS
      initialDelaySeconds: 20

    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["all"]
      readOnlyRootFilesystem: true
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001

    service:
      annotations: {}
      labels: {}
      #  Add these labels to have metrics-server show up in `kubectl cluster-info`
      #  kubernetes.io/cluster-service: "true"
      #  kubernetes.io/name: "Metrics-server"
      port: 443
      type: ClusterIP

    podDisruptionBudget:
      # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
      enabled: true
      # Note: due to a (common) bug in the chart, setting minAvailable to zero does not actually do that.
      # To set minAvailable or maxUnavailable to zero, you need to use "0%". Also, you cannot set both.
      # When using percentage, Kubernetes rounds up to the nearest integer. If you say minAvailable: 25%
      # but only have 1 replica, minAvailable will round up to 1, leaving you stuck. That is why it is
      # better to use maxUnavailable for small numbers.
      # minAvailable:
      maxUnavailable: "75%"
