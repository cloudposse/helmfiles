repositories:
# Stable repo of official helm charts
- name: "stable"
  url: "https://kubernetes-charts.storage.googleapis.com"

releases:

#######################################################################################
## kubernetes-dashboard                                                              ##
## General-purpose web UI for Kubernetes clusters                                    ##
#######################################################################################

#
# References:
#   - https://github.com/kubernetes/dashboard
#   - https://github.com/kubernetes/charts/tree/master/stable/kubernetes-dashboard
#
- name: "kubernetes-dashboard"
  namespace: "kube-system"
  labels:
    chart: "kubernetes-dashboard"
    repo: "stable"
    component: "monitoring"
    namespace: "kube-system"
    vendor: "kubernetes"
    default: "true"
  chart: "stable/kubernetes-dashboard"
  version: "0.10.0"
  wait: true
  installed: {{ env "KUBERNETES_DASHBOARD_INSTALLED" | default "true" }}
  values:
    - image:
        repository: "k8s.gcr.io/kubernetes-dashboard-amd64"
        ### Optional: KUBERNETES_DASHBOARD_IMAGE_TAG;
        tag: '{{ env "KUBERNETES_DASHBOARD_IMAGE_TAG" | default "v1.10.0" }}'
        pullPolicy: "IfNotPresent"
      enableInsecureLogin: {{ env "KUBERNETES_DASHBOARD_ENABLE_INSECURE_LOGIN" | default "false"}}
{{- if eq (env "KUBERNETES_DASHBOARD_ENABLE_INSECURE_LOGIN" | default "false") "true" }}
      service:
        externalPort: 80
{{- end }}
{{- if eq (env "KUBERNETES_DASHBOARD_SKIP_LOGIN" | default "false") "true" }}
      extraArgs:
        - --enable-skip-login
{{- end }}
      replicaCount: '{{ env "KUBERNETES_DASHBOARD_REPLICA_COUNT" | default 1 }}'
      resources:
        limits:
          cpu: '{{ env "KUBERNETES_DASHBOARD_LIMIT_CPU" | default "100m" }}'
          memory: '{{ env "KUBERNETES_DASHBOARD_LIMIT_MEMORY" | default "100Mi" }}'
        requests:
          cpu: '{{ env "KUBERNETES_DASHBOARD_REQUEST_CPU" | default "50m" }}'
          memory: '{{ env "KUBERNETES_DASHBOARD_REQUEST_MEMORY" | default "50Mi" }}'
      rbac:
        ### Optional: RBAC_ENABLED;
        create: {{ env "RBAC_ENABLED" | default "false" }}
      serviceAccount:
        ### Optional: RBAC_ENABLED;
        create: {{ env "RBAC_ENABLED" | default "false" }}
        ### Optional: KUBERNETES_DASHBOARD_SERVICE_ACCOUNT_NAME;
        name: '{{ env "KUBERNETES_DASHBOARD_SERVICE_ACCOUNT_NAME" | default "" }}'

      ingress:
        enabled: {{ env "KUBERNETES_DASHBOARD_INGRESS_ENABLED" | default "false" }}
        annotations:
          kubernetes.io/ingress.class: {{ env "KUBERNETES_DASHBOARD_INGRESS_CLASS" | default "nginx" }}
{{- if eq (env "KUBERNETES_DASHBOARD_ENABLE_INSECURE_LOGIN" | default "false") "false" }}
          nginx.ingress.kubernetes.io/secure-backends: "true"
{{- end }}
          kubernetes.io/tls-acme: '{{ env "KUBERNETES_DASHBOARD_INGRESS_USE_KUBE_LEGO" | default "false" }}'
        hosts:
        - {{ env "KUBERNETES_DASHBOARD_INGRESS_HOST" }}
{{- if eq (env "KUBERNETES_DASHBOARD_INGRESS_TLS_ENABLED" | default "false") "true" }}
        tls:
        - secretName: kubernetes-dashboard-tls
          hosts:
          - {{ env "KUBERNETES_DASHBOARD_INGRESS_HOST" }}
{{- end }}
