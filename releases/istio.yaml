repositories:
  - name: istio.io
    url: https://storage.googleapis.com/istio-release/releases/{{ coalesce (env "ISTIO_INIT_IMAGE_TAG") (env "ISTIO_IMAGE_TAG") "1.3.4" }}/charts

  # Kubernetes incubator repo of helm charts
  - name: "kubernetes-incubator"
    url: "https://kubernetes-charts-incubator.storage.googleapis.com"

releases:
  #######################################################################################
  ## istio                                                                             ##
  ## istio is a service mesh for Kubernetes.                                           ##
  #######################################################################################
  #
  # References:
  #   - https://github.com/istio/istio/tree/1.3.0/install/kubernetes/helm/istio
  #   - https://github.com/istio/istio
  #
  - name: "istio"
    namespace: "istio-system"
    labels:
      chart: "istio"
      repo: "github"
      component: "istio"
      namespace: "istio-system"
      vendor: "istio"
      default: "false"
    chart: "istio.io/istio"
    version: "{{ coalesce (env "ISTIO_INIT_IMAGE_TAG") (env "ISTIO_IMAGE_TAG") "1.3.4" }}"
    wait: true
    installed: {{ env "ISTIO_INSTALLED" | default "true" }}
    values:
    {{- if eq (env "ISTIO_GATEKEEPER_INSTALLED" | default "false") "true" }}
    - ./values/istio-oidc-additional-gateway.yaml.gotmpl
    {{- end }}
    - gateways:
        # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/gateways/values.yaml
        enabled: {{ env "ISTIO_GATEWAYS_ENABLED" | default "true" }}
        istio-ingressgateway:
          enabled: true
          #
          # Secret Discovery Service (SDS) configuration for ingress gateway.
          #
          sds:
            # If true, ingress gateway fetches credentials from SDS server to handle TLS connections.
            enabled: false
            # SDS server that watches kubernetes secrets and provisions credentials to ingress gateway.
            # This server runs in the same pod as ingress gateway.
            image: node-agent-k8s
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 2000m
                memory: 1024Mi

          labels:
            app: istio-ingressgateway
            istio: ingressgateway
          autoscaleEnabled: true
          autoscaleMin: 2
          autoscaleMax: 5
          replicaCount: 2
          # specify replicaCount when autoscaleEnabled: false
          # replicaCount: 1
          rollingMaxSurge: 100%
          rollingMaxUnavailable: 25%
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2000m
              memory: 1024Mi
          cpu:
            targetAverageUtilization: 80
          loadBalancerIP: ""
          loadBalancerSourceRanges: []
          externalIPs: []
          serviceAnnotations:
            ### Required: ISTIO_GATEWAYS_INGRESS_HOSTNAME; e.g. istio.us-west-2.cloudposse.org
            external-dns.alpha.kubernetes.io/hostname: '{{ requiredEnv "ISTIO_GATEWAYS_INGRESS_HOSTNAME" }}'
            ### Optional: ISTIO_GATEWAYS_INGRESS_TTL; e.g. 60
            external-dns.alpha.kubernetes.io/ttl: '{{ env "ISTIO_GATEWAYS_INGRESS_TTL" | default "60" }}'
          podAnnotations: {}
          type: LoadBalancer #change to NodePort, ClusterIP or LoadBalancer if need be
          #externalTrafficPolicy: Local #change to Local to preserve source IP or Cluster for default behaviour or leave commented out
          ports:
            ## You can add custom gateway ports
            # Note that AWS ELB will by default perform health checks on the first port
            # on this list. Setting this to the health check port will ensure that health
            # checks always work. https://github.com/istio/istio/issues/12503
            - port: 15020
              targetPort: 15020
              name: status-port
            - port: 80
              targetPort: 80
              name: http2
              nodePort: 31380
            - port: 443
              name: https
              nodePort: 31390
            # Example of a port to add. Remove if not needed
            - port: 31400
              name: tcp
              nodePort: 31400
            ### PORTS FOR UI/metrics #####
            ## Disable if not needed
            - port: 15029
              targetPort: 15029
              name: https-kiali
            - port: 15030
              targetPort: 15030
              name: https-prometheus
            - port: 15031
              targetPort: 15031
              name: https-grafana
            - port: 15032
              targetPort: 15032
              name: https-tracing
              # This is the port where sni routing happens
            - port: 15443
              targetPort: 15443
              name: tls
          #### MESH EXPANSION PORTS  ########
          # Pilot and Citadel MTLS ports are enabled in gateway - but will only redirect
          # to pilot/citadel if global.meshExpansion settings are enabled.
          # Delete these ports if mesh expansion is not enabled, to avoid
          # exposing unnecessary ports on the web.
          # You can remove these ports if you are not using mesh expansion
          meshExpansionPorts:
            - port: 15011
              targetPort: 15011
              name: tcp-pilot-grpc-tls
            - port: 15004
              targetPort: 15004
              name: tcp-mixer-grpc-tls
            - port: 8060
              targetPort: 8060
              name: tcp-citadel-grpc-tls
            - port: 853
              targetPort: 853
              name: tcp-dns-tls
          ####### end MESH EXPANSION PORTS ######
          ##############
          secretVolumes:
            - name: ingressgateway-certs
              secretName: istio-ingressgateway-certs
              mountPath: /etc/istio/ingressgateway-certs
            - name: ingressgateway-ca-certs
              secretName: istio-ingressgateway-ca-certs
              mountPath: /etc/istio/ingressgateway-ca-certs
          ### Advanced options ############

          # Ports to explicitly check for readiness. If configured, the readiness check will expect a
          # listener on these ports. A comma separated list is expected, such as "80,443".
          #
          # Warning: If you do not have a gateway configured for the ports provided, this check will always
          # fail. This is intended for use cases where you always expect to have a listener on the port,
          # such as 80 or 443 in typical setups.
          applicationPorts: ""

          env:
            # A gateway with this mode ensures that pilot generates an additional
            # set of clusters for internal services but without Istio mTLS, to
            # enable cross cluster routing.
            ISTIO_META_ROUTER_MODE: "sni-dnat"
          nodeSelector: {}
          tolerations: []

          # Specify the pod anti-affinity that allows you to constrain which nodes
          # your pod is eligible to be scheduled based on labels on pods that are
          # already running on the node rather than based on labels on nodes.
          # There are currently two types of anti-affinity:
          #    "requiredDuringSchedulingIgnoredDuringExecution"
          #    "preferredDuringSchedulingIgnoredDuringExecution"
          # which denote "hard" vs. "soft" requirements, you can define your values
          # in "podAntiAffinityLabelSelector" and "podAntiAffinityTermLabelSelector"
          # correspondingly.
          # For example:
          # podAntiAffinityLabelSelector:
          # - key: security
          #   operator: In
          #   values: S1,S2
          #   topologyKey: "kubernetes.io/hostname"
          # This pod anti-affinity rule says that the pod requires not to be scheduled
          # onto a node if that node is already running a pod with label having key
          # "security" and value "S1".
          podAntiAffinityLabelSelector: []
          podAntiAffinityTermLabelSelector: []

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/sidecarInjectorWebhook/values.yaml
      sidecarInjectorWebhook:
        enabled: {{ env "ISTIO_SIDECAR_INJECTOR_WEBHOOK_ENABLED" | default "true" }}
        replicaCount: 2

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/galley/values.yaml
      galley:
        enabled: {{ env "ISTIO_GALLEY_ENABLED" | default "true" }}
        replicaCount: 2

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/mixer/values.yaml
      mixer:
        policy:
          # if policy is enabled the global.disablePolicyChecks has affect.
          enabled: {{ env "ISTIO_MIXER_POLICY_ENABLED" | default "true" }}
          replicaCount: 2
          autoscaleEnabled: true
          autoscaleMin: 2
          autoscaleMax: 5

        telemetry:
          enabled: {{ env "ISTIO_MIXER_TELEMETRY_ENABLED" | default "true" }}
          replicaCount: 2
          autoscaleEnabled: true
          autoscaleMin: 2
          autoscaleMax: 5
          resources:
            requests:
              cpu: {{ env "ISTIO_MIXER_TELEMETRY_CPU_REQUEST" | default "1000m" }}
              memory: {{ env "ISTIO_MIXER_TELEMETRY_MEMORY_REQUEST" | default "1G" }}
            limits:
              cpu: {{ env "ISTIO_MIXER_TELEMETRY_CPU_LIMIT" | default "4800m" }}
              memory: {{ env "ISTIO_MIXER_TELEMETRY_MEMORY_LIMIT" | default "4G" }}

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/pilot/values.yaml
      pilot:
        enabled: {{ env "ISTIO_PILOT_ENABLED" | default "true" }}
        enableProtocolSniffingForOutbound: {{ env "ISTIO_PILOT_PROTOCOL_SNIFFING_FOR_OUTBOUND" | default "false" }}
        replicaCount: 2
        autoscaleEnabled: true
        autoscaleMin: 2
        autoscaleMax: 5
        resources:
          requests:
            cpu: {{ env "ISTIO_PILOT_CPU_REQUEST" | default "500m" }}
            memory: {{ env "ISTIO_PILOT_MEMORY_REQUEST" | default "2048Mi" }}

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/security/values.yaml
      security:
        enabled: {{ env "ISTIO_SECURITY_ENABLED" | default "true" }}
        replicaCount: 2

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/nodeagent/values.yaml
      nodeagent:
        enabled: {{ env "ISTIO_NODEAGENT_ENABLED" | default "false" }}

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/grafana/values.yaml
      grafana:
        enabled: {{ env "ISTIO_GRAFANA_ENABLED" | default "false" }}
        replicaCount: 2

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/prometheus/values.yaml
      prometheus:
        enabled: {{ env "ISTIO_PROMETHEUS_ENABLED" | default "false" }}
        replicaCount: 2

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/tracing/values.yaml
      tracing:
        enabled: {{ env "ISTIO_TRACING_ENABLED" | default "false" }}

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/kiali/values.yaml
      kiali:
        enabled: {{ env "ISTIO_KIALI_ENABLED" | default "false" }}
        replicaCount: 2
        contextPath: /
        prometheusAddr: {{ env "ISTIO_PROMETHEUS" | default "http://prometheus-operator-prometheus.monitoring:9090" }}
        dashboard:
          grafanaURL: {{ env "ISTIO_GRAFANA" }}
          auth:
            strategy: {{ env "ISTIO_KIALI_AUTH_STRATEGY" | default "login" }}

      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/certmanager/values.yaml
      certmanager:
        enabled: {{ env "ISTIO_CERTMANAGER_ENABLED" | default "false" }}
        replicaCount: 2

      #
      # Istio CNI plugin enabled
      #   This must be enabled to use the CNI plugin in Istio.  The CNI plugin is installed separately.
      #   If true, the privileged initContainer istio-init is not needed to perform the traffic redirect
      #   settings for the istio-proxy.
      #
      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/istio_cni/values.yaml
      istio_cni:
        enabled: {{ env "ISTIO_CNI_ENABLED" | default "false" }}

      # addon Istio CoreDNS configuration
      #
      # @see https://github.com/istio/istio/blob/master/install/kubernetes/helm/istio/charts/istiocoredns/values.yaml
      istiocoredns:
        enabled: {{ env "ISTIO_COREDNS_ENABLED" | default "true" }}
        replicaCount: 2

      # Common settings used among istio subcharts.
      global:
        hub: "docker.io/istio"
        tag: "{{ coalesce (env "ISTIO_INIT_IMAGE_TAG") (env "ISTIO_IMAGE_TAG") "1.3.4" }}"
        pullPolicy: "IfNotPresent"

        # Comma-separated minimum per-scope logging level of messages to output, in the form of <scope>:<level>,<scope>:<level>
        # The control plane has different scopes depending on component, but can configure default log level across all components
        # If empty, default scope and level will be used as configured in code
        logging:
          level: "default:info"

        # monitoring port used by mixer, pilot, galley and sidecar injector
        monitoringPort: 15014

        k8sIngress:
          enabled: {{ env "ISTIO_K8S_INGRESS_ENABLED" | default "false" }}
          # Gateway used for k8s Ingress resources. By default it is
          # using 'istio:ingressgateway' that will be installed by setting
          # 'gateways.enabled' and 'gateways.istio-ingressgateway.enabled'
          # flags to true.
          gatewayName: ingressgateway
          # enableHttps will add port 443 on the ingress.
          # It REQUIRES that the certificates are installed  in the
          # expected secrets - enabling this option without certificates
          # will result in LDS rejection and the ingress will not work.
          enableHttps: {{ env "ISTIO_ENABLE_HTTPS" | default "false" }}

        proxy:
          # Configuration for the proxy init container
          init:
            resources:
              limits:
                cpu: 100m
                memory: 50Mi
              requests:
                cpu: 10m
                memory: 10Mi
          image: proxyv2

          # cluster domain. Default value is "cluster.local".
          clusterDomain: "cluster.local"

          # Resources for the sidecar.
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2000m
              memory: 1024Mi

          # Controls number of Proxy worker threads.
          # If set to 0, then start worker thread for each CPU thread/core.
          concurrency: 2

          # Configures the access log for each sidecar.
          # Options:
          #   "" - disables access log
          #   "/dev/stdout" - enables access log
          accessLogFile: ""

          # Configure how and what fields are displayed in sidecar access log. Setting to
          # empty string will result in default log format
          accessLogFormat: ""

          # Configure the access log for sidecar to JSON or TEXT.
          accessLogEncoding: TEXT

          # Configure envoy gRPC access log service.
          envoyAccessLogService:
            enabled: {{ env "ISTIO_PROXY_ENVOY_ACCESS_LOG_SERVICE_ENABLED" | default "false" }}
            host: # example: accesslog-service.istio-system
            port: # example: 15000
            tlsSettings:
              mode: DISABLE # DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
              clientCertificate: # example: /etc/istio/als/cert-chain.pem
              privateKey: # example: /etc/istio/als/key.pem
              caCertificates: # example: /etc/istio/als/root-cert.pem
              sni: # example: als.somedomain
              subjectAltNames: []
              # - als.somedomain
            tcpKeepalive:
              probes: 3
              time: 10s
              interval: 10s

          # Log level for proxy, applies to gateways and sidecars.  If left empty, "warning" is used.
          # Expected values are: trace|debug|info|warning|error|critical|off
          logLevel: ""

          # Per Component log level for proxy, applies to gateways and sidecars. If a component level is
          # not set, then the global "logLevel" will be used. If left empty, "misc:error" is used.
          componentLogLevel: ""

          # Configure the DNS refresh rate for Envoy cluster of type STRICT_DNS
          # This must be given it terms of seconds. For example, 300s is valid but 5m is invalid.
          dnsRefreshRate: 300s

          # Automatic protocol detection uses a set of heuristics to
          # determine whether the connection is using TLS or not (on the
          # server side), as well as the application protocol being used
          # (e.g., http vs tcp). These heuristics rely on the client sending
          # the first bits of data. For server first protocols like MySQL,
          # MongoDB, etc., Envoy will timeout on the protocol detection after
          # the specified period, defaulting to non mTLS plain TCP
          # traffic. Set this field to tweak the period that Envoy will wait
          # for the client to send the first bits of data. (MUST BE >=1ms)
          protocolDetectionTimeout: 100ms

          #If set to true, istio-proxy container will have privileged securityContext
          privileged: {{ env "ISTIO_PROXY_PRIVILEGED" | default "false" }}

          # If set, newly injected sidecars will have core dumps enabled.
          enableCoreDump: {{ env "ISTIO_PROXY_ENABLE_CORE_DUMP" | default "false" }}

          # Image used to enable core dumps. This is only used, when "enableCoreDump" is set to true.
          enableCoreDumpImage: ubuntu:xenial

          # Default port for Pilot agent health checks. A value of 0 will disable health checking.
          statusPort: 15020

          # The initial delay for readiness probes in seconds.
          readinessInitialDelaySeconds: 1

          # The period between readiness probes.
          readinessPeriodSeconds: 2

          # The number of successive failed probes before indicating readiness failure.
          readinessFailureThreshold: 30

          # istio egress capture whitelist
          # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly
          # example: includeIPRanges: "172.30.0.0/16,172.20.0.0/16"
          # would only capture egress traffic on those two IP Ranges, all other outbound traffic would
          # be allowed by the sidecar
          includeIPRanges: "*"
          excludeIPRanges: ""
          excludeOutboundPorts: ""

          # pod internal interfaces
          kubevirtInterfaces: ""

          # istio ingress capture whitelist
          # examples:
          #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=""
          #     Redirect all inbound traffic to Envoy:   --includeInboundPorts="*"
          #     Redirect only selected ports:            --includeInboundPorts="80,8080"
          includeInboundPorts: "*"
          excludeInboundPorts: ""

          # This controls the 'policy' in the sidecar injector.
          autoInject: enabled

          # Sets the destination Statsd in envoy (the value of the "--statsdUdpAddress" proxy argument
          # would be <host>:<port>).
          # Disabled by default.
          # The istio-statsd-prom-bridge is deprecated and should not be used moving forward.
          envoyStatsd:
            # If enabled is set to true, host and port must also be provided. Istio no longer provides a statsd collector.
            enabled: {{ env "ISTIO_PROXY_ENVOY_STATSD_ENABLED" | default "false" }}
            host: # example: statsd-svc.istio-system
            port: # example: 9125

          # Sets the Envoy Metrics Service address, used to push Envoy metrics to an external collector
          # via the Metrics Service gRPC API. This contains detailed stats information emitted directly
          # by Envoy and should not be confused with the the Istio telemetry. The Envoy stats are also
          # available to scrape via the Envoy admin port at either /stats or /stats/prometheus.
          #
          # See https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/metrics/v2/metrics_service.proto
          # for details about Envoy's Metrics Service API.
          #
          # Disabled by default.
          envoyMetricsService:
            enabled: {{ env "ISTIO_PROXY_ENVOY_METRICS_SERVICE_ENABLED" | default "false" }}
            host: # example: metrics-service.istio-system
            port: # example: 15000

          # Specify which tracer to use. One of: zipkin, lightstep, datadog, stackdriver.
          # If using stackdriver tracer outside GCP, set env GOOGLE_APPLICATION_CREDENTIALS to the GCP credential file.
          tracer: "zipkin"

        proxy_init:
          # Base name for the proxy_init container, used to configure iptables.
          image: proxy_init

        # controlPlaneSecurityEnabled enabled. Will result in delays starting the pods while secrets are
        # propagated, not recommended for tests.
        controlPlaneSecurityEnabled: {{ env "ISTIO_CONTROL_PLANE_SECURITY_ENABLED" | default "false" }}

        # disablePolicyChecks disables mixer policy checks.
        # if mixer.policy.enabled==true then disablePolicyChecks has affect.
        # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.
        disablePolicyChecks: {{ env "ISTIO_DISABLE_POLICY_CHECKS" | default "true" }}

        # policyCheckFailOpen allows traffic in cases when the mixer policy service cannot be reached.
        # Default is false which means the traffic is denied when the client is unable to connect to Mixer.
        policyCheckFailOpen: {{ env "ISTIO_POLICY_CHECK_FAIL_OPEN" | default "false" }}

        # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.
        enableTracing: {{ env "ISTIO_ENABLE_TRACING" | default "true" }}

        # Configuration for each of the supported tracers
        tracer:
          # Configuration for envoy to send trace data to LightStep.
          # Disabled by default.
          # address: the <host>:<port> of the satellite pool
          # accessToken: required for sending data to the pool
          # secure: specifies whether data should be sent with TLS
          # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is
          #   required. If a value is specified then a secret called "lightstep.cacert" must be created in the destination
          #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.
          #
          lightstep:
            address: ""                # example: lightstep-satellite:443
            accessToken: ""            # example: abcdefg1234567
            secure: true               # example: true|false
            cacertPath: ""             # example: /etc/lightstep/cacert.pem
          zipkin:
            # Host:Port for reporting trace data in zipkin format. If not specified, will default to
            # zipkin service (port 9411) in the same namespace as the other istio components.
            address: ""
          datadog:
            # Host:Port for submitting traces to the Datadog agent.
            address: "$(HOST_IP):8126"

        # Default mtls policy. If true, mtls between services will be enabled by default.
        mtls:
          # Default setting for service-to-service mtls. Can be set explicitly using
          # destination rules or service annotations.
          enabled: {{ env "ISTIO_MTLS_ENABLED" | default "false" }}

        # Lists the secrets you need to use to pull Istio images from a private registry.
        imagePullSecrets: []
        # - private-registry-key

        # Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:
        #   0 - Never scheduled
        #   1 - Least preferred
        #   2 - No preference
        #   3 - Most preferred
        arch:
          amd64: 2
          s390x: 2
          ppc64le: 2

        # Whether to restrict the applications namespace the controller manages;
        # If not set, controller watches all namespaces
        oneNamespace: {{ env "ISTIO_ONE_NAMESPACE" | default "false" }}

        # Default node selector to be applied to all deployments so that all pods can be
        # constrained to run a particular nodes. Each component can overwrite these default
        # values by adding its node selector block in the relevant section below and setting
        # the desired values.
        defaultNodeSelector: {}

        # Default node tolerations to be applied to all deployments so that all pods can be
        # scheduled to a particular nodes with matching taints. Each component can overwrite
        # these default values by adding its tolerations block in the relevant section below
        # and setting the desired values.
        # Configure this field in case that all pods of Istio control plane are expected to
        # be scheduled to particular nodes with specified taints.
        defaultTolerations: []

        # Whether to perform server-side validation of configuration.
        configValidation: {{ env "ISTIO_CONFIG_VALIDATION" | default "true" }}

        # Custom DNS config for the pod to resolve names of services in other
        # clusters. Use this to add additional search domains, and other settings.
        # see
        # https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config
        # This does not apply to gateway pods as they typically need a different
        # set of DNS settings than the normal application pods (e.g., in
        # multicluster scenarios).
        # NOTE: If using templates, follow the pattern in the commented example below.
        # podDNSSearchNamespaces:
        # - global
        # - "[[ valueOrDefault .DeploymentMeta.Namespace \"default\" ]].global"

        # If set to true, the pilot and citadel mtls will be exposed on the
        # ingress gateway
        meshExpansion:
          enabled: {{ env "ISTIO_MESH_EXPANSION_ENABLED" | default "false" }}
          # If set to true, the pilot and citadel mtls and the plaintext pilot ports
          # will be exposed on an internal gateway
          useILB: {{ env "ISTIO_MESH_EXPANSION_USE_ILB" | default "false" }}

        multiCluster:
          # Set to true to connect two kubernetes clusters via their respective
          # ingressgateway services when pods in each cluster cannot directly
          # talk to one another. All clusters should be using Istio mTLS and must
          # have a shared root CA for this model to work.
          enabled: {{ env "ISTIO_MULTI_CLUSTER_ENABLED" | default "false" }}

          # Should be set to the name of the cluster this installation will run in. This is required for sidecar injection
          # to properly label proxies
          clusterName: ""

        # A minimal set of requested resources to applied to all deployments so that
        # Horizontal Pod Autoscaler will be able to function (if set).
        # Each component can overwrite these default values by adding its own resources
        # block in the relevant section below and setting the desired resources values.
        defaultResources:
          requests:
            cpu: 10m
          #   memory: 128Mi
          # limits:
          #   cpu: 100m
          #   memory: 128Mi

        # enable pod distruption budget for the control plane, which is used to
        # ensure Istio control plane components are gradually upgraded or recovered.
        defaultPodDisruptionBudget:
          enabled: {{ env "ISTIO_DEFAULT_POD_DISRUPTION_BUDGET_ENABLED" | default "true" }}
          # The values aren't mutable due to a current PodDisruptionBudget limitation
          # minAvailable: 1

        # Kubernetes >=v1.11.0 will create two PriorityClass, including system-cluster-critical and
        # system-node-critical, it is better to configure this in order to make sure your Istio pods
        # will not be killed because of low priority class.
        # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
        # for more detail.
        priorityClassName: ""

        # Use the Mesh Control Protocol (MCP) for configuring Mixer and
        # Pilot. Requires galley (`--set galley.enabled=true`).
        useMCP: {{ env "ISTIO_USE_MCP" | default "true" }}

        # The trust domain corresponds to the trust root of a system
        # Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain
        # Indicate the domain used in SPIFFE identity URL
        # The default depends on the environment.
        #   kubernetes: cluster.local
        #   else:  default dns domain
        trustDomain: ""

        # Mesh ID means Mesh Identifier. It should be unique within the scope where
        # meshes will interact with each other, but it is not required to be
        # globally/universally unique. For example, if any of the following are true,
        # then two meshes must have different Mesh IDs:
        # - Meshes will have their telemetry aggregated in one place
        # - Meshes will be federated together
        # - Policy will be written referencing one mesh from the other
        #
        # If an administrator expects that any of these conditions may become true in
        # the future, they should ensure their meshes have different Mesh IDs
        # assigned.
        #
        # Within a multicluster mesh, each cluster must be (manually or auto)
        # configured to have the same Mesh ID value. If an existing cluster 'joins' a
        # multicluster mesh, it will need to be migrated to the new mesh ID. Details
        # of migration TBD, and it may be a disruptive operation to change the Mesh
        # ID post-install.
        #
        # If the mesh admin does not specify a value, Istio will use the value of the
        # mesh's Trust Domain. The best practice is to select a proper Trust Domain
        # value.
        meshID: ""

        # Set the default behavior of the sidecar for handling outbound traffic from the application:
        # ALLOW_ANY - outbound traffic to unknown destinations will be allowed, in case there are no
        #   services or ServiceEntries for the destination port
        # REGISTRY_ONLY - restrict outbound traffic to services defined in the service registry as well
        #   as those defined through ServiceEntries
        # ALLOW_ANY is the default in 1.1.  This means each pod will be able to make outbound requests
        # to services outside of the mesh without any ServiceEntry.
        # REGISTRY_ONLY was the default in 1.0.  If this behavior is desired, set the value below to REGISTRY_ONLY.
        outboundTrafficPolicy:
          mode: ALLOW_ANY

        # The namespace where globally shared configurations should be present.
        # DestinationRules that apply to the entire mesh (e.g., enabling mTLS),
        # default Sidecar configs, etc. should be added to this namespace.
        # configRootNamespace: istio-config

        # set the default set of namespaces to which services, service entries, virtual services, destination
        # rules should be exported to. Currently only one value can be provided in this list. This value
        # should be one of the following two options:
        # * implies these objects are visible to all namespaces, enabling any sidecar to talk to any other sidecar.
        # . implies these objects are visible to only to sidecars in the same namespace, or if imported as a Sidecar.egress.host
        # defaultConfigVisibilitySettings:
        #- '*'

        sds:
          # SDS enabled. IF set to true, mTLS certificates for the sidecars will be
          # distributed through the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
          enabled: {{ env "ISTIO_SDS_ENABLED" | default "false" }}
          udsPath: ""
          # The JWT token for SDS and the aud field of such JWT. See RFC 7519, section 4.1.3.
          # When a CSR is sent from Citadel Agent to the CA (e.g. Citadel), this aud is to make sure the
          # JWT is intended for the CA.
          token:
            aud: istio-ca

        # Configure the mesh networks to be used by the Split Horizon EDS.
        #
        # The following example defines two networks with different endpoints association methods.
        # For `network1` all endpoints that their IP belongs to the provided CIDR range will be
        # mapped to network1. The gateway for this network example is specified by its public IP
        # address and port.
        # The second network, `network2`, in this example is defined differently with all endpoints
        # retrieved through the specified Multi-Cluster registry being mapped to network2. The
        # gateway is also defined differently with the name of the gateway service on the remote
        # cluster. The public IP for the gateway will be determined from that remote service (only
        # LoadBalancer gateway service type is currently supported, for a NodePort type gateway service,
        # it still need to be configured manually).
        #
        # meshNetworks:
        #   network1:
        #     endpoints:
        #     - fromCidr: "192.168.0.1/24"
        #     gateways:
        #     - address: 1.1.1.1
        #       port: 80
        #   network2:
        #     endpoints:
        #     - fromRegistry: reg1
        #     gateways:
        #     - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local
        #       port: 443
        #
        meshNetworks: {}

        # Specifies the global locality load balancing settings.
        # Locality-weighted load balancing allows administrators to control the distribution of traffic to
        # endpoints based on the localities of where the traffic originates and where it will terminate.
        # Either failover or distribute configuration can be set, but not both. If neither are provided
        # failover mode will be used.
        #
        # localityLbSetting:
        #   enabled: true
        #   distribute:
        #   - from: "us-central1/*"
        #     to:
        #       "us-central1/*": 80
        #       "us-central2/*": 20
        #
        # localityLbSetting:
        #   enabled: true
        #   failover:
        #   - from: us-east
        #     to: eu-west
        #   - from: us-west
        #     to: us-east
        localityLbSetting:
          enabled: {{ env "ISTIO_LOCALITY_LB_SETTING_ENABLED" | default "true" }}

        # Specifies whether helm test is enabled or not.
        # This field is set to false by default, so 'helm template ...'
        # will ignore the helm test yaml files when generating the template
        enableHelmTest: {{ env "ISTIO_HELM_TEST_ENABLED" | default "false" }}
{{- if env "ISTIO_CUSTOM_YAML" }}
    - {{ env "ISTIO_CUSTOM_YAML" }}
{{- end }}


  - name: "istio-prometheus"
    namespace: "istio-system"
    labels:
      chart: "monochart"
      repo: "cloudposse"
      component: "prometheus"
      namespace: "istio-system"
      vendor: "cloudposse"
      default: "false"
    chart: "cloudposse-incubator/monochart"
    version: "0.4.0"
    wait: true
    installed: {{ env "ISTIO_INSTALLED" | default "true" }}
    values:
      - serviceMonitors:
          istio-mesh-monitor:
            labels:
              monitoring: istio-mesh
            selector:
              matchExpressions:
                - {key: istio, operator: In, values: [mixer]}
            namespaceSelector:
              matchNames:
                - istio-system
            endpoints:
              - port: prometheus
                interval: 15s

          istio-component-monitor:
            labels:
              monitoring: istio-components
            selector:
              matchExpressions:
                - {key: istio, operator: In, values: [mixer,pilot,galley,citadel]}
            namespaceSelector:
              any: true
            endpoints:
              - port: http-monitoring
                interval: 15s
              - port: http-policy-monitoring
                interval: 15s

          envoy-stats-monitor:
            labels:
              monitoring: istio-proxies
            selector:
              matchExpressions:
                - {key: istio-prometheus-ignore, operator: DoesNotExist}
            namespaceSelector:
              any: true
            jobLabel: envoy-stats
            endpoints:
              - path: /stats/prometheus
                targetPort: 15090
                interval: 15s
                relabelings:
                  - sourceLabels: [__meta_kubernetes_pod_container_port_name]
                    action: keep
                    regex: '.*-envoy-prom'
                  - action: labelmap
                    regex: "__meta_kubernetes_pod_label_(.+)"
                  - sourceLabels: [__meta_kubernetes_namespace]
                    action: replace
                    targetLabel: namespace
                  - sourceLabels: [__meta_kubernetes_pod_name]
                    action: replace
                    targetLabel: pod_name

          kubernetes-pods-monitor:
            labels:
              monitoring: kube-pods
            selector:
              matchExpressions:
                - {key: istio-prometheus-ignore, operator: DoesNotExist}
            namespaceSelector:
              any: true
            jobLabel: kubernetes-pods
            endpoints:
              - interval: 15s
                relabelings:
                  - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                    action: keep
                    regex: 'true'
                  - sourceLabels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_prometheus_io_scheme]
                    action: keep
                    regex: '((;.*)|(.*;http)|(.??))'
                  - sourceLabels: [__meta_kubernetes_pod_annotation_istio_mtls]
                    action: drop
                    regex: 'true'
                  - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                    action: replace
                    targetLabel: __metrics_path__
                    regex: '(.+)'
                  - sourceLabels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                    action: replace
                    regex: '([^:]+)(?::\d+)?;(\d+)'
                    replacement: $1:$2
                    targetLabel: __address__
                  - action: labelmap
                    regex: '__meta_kubernetes_pod_label_(.+)'
                  - sourceLabels: [__meta_kubernetes_namespace]
                    action: replace
                    targetLabel: namespace
                  - sourceLabels: [__meta_kubernetes_pod_name]
                    action: replace
                    targetLabel: pod_name

          kubernetes-pods-secure-monitor:
            labels:
              monitoring: kube-services-secure
            selector:
              matchExpressions:
                - {key: istio-prometheus-ignore, operator: DoesNotExist}
            namespaceSelector:
              any: true
            jobLabel: kubernetes-pods-secure
            endpoints:
              - interval: 15s
                scheme: https
                tlsConfig:
                  caFile: /etc/prometheus/secrets/istio.prometheus/root-cert.pem
                  certFile: /etc/prometheus/secrets/istio.prometheus/cert-chain.pem
                  keyFile: /etc/prometheus/secrets/istio.prometheus/key.pem
                  insecureSkipVerify: true  # prometheus does not support secure naming.
                relabelings:
                  - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                    action: keep
                    regex: 'true'
                  # sidecar status annotation is added by sidecar injector and
                  # istio_workload_mtls_ability can be specifically placed on a pod to indicate its ability to receive mtls traffic.
                  - sourceLabels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_istio_mtls]
                    action: keep
                    regex: '(([^;]+);([^;]*))|(([^;]*);(true))'
                  - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
                    action: drop
                    regex: '(http)'
                  - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                    action: replace
                    targetLabel: __metrics_path__
                    regex: '(.+)'
                  - sourceLabels: [__address__]  # Only keep address that is host:port
                    action: keep    # otherwise an extra target with ':443' is added for https scheme
                    regex: '([^:]+):(\d+)'
                  - sourceLabels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                    action: replace
                    regex: '([^:]+)(?::\d+)?;(\d+)'
                    replacement: $1:$2
                    targetLabel: __address__
                  - action: labelmap
                    regex: '__meta_kubernetes_pod_label_(.+)'
                  - sourceLabels: [__meta_kubernetes_namespace]
                    action: replace
                    targetLabel: namespace
                  - sourceLabels: [__meta_kubernetes_pod_name]
                    action: replace
                    targetLabel: pod_name

          kubernetes-services-monitor:
            labels:
              monitoring: kube-services
            selector:
              matchExpressions:
                - {key: istio-prometheus-ignore, operator: DoesNotExist}
            namespaceSelector:
              any: true
            jobLabel: kubernetes-services
            endpoints:
              - interval: 15s
                relabelings:
                  - sourceLabels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                    action: keep
                    regex: 'true'
                  - sourceLabels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_service_annotation_prometheus_io_scheme]
                    action: keep
                    regex: '((;.*)|(.*;http)|(.??))'
                  - sourceLabels: [__meta_kubernetes_pod_annotation_istio_mtls]
                    action: drop
                    regex: 'true'
                  - sourceLabels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                    action: replace
                    targetLabel: __metrics_path__
                    regex: '(.+)'
                  - sourceLabels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                    action: replace
                    regex: '([^:]+)(?::\d+)?;(\d+)'
                    replacement: $1:$2
                    targetLabel: __address__
                  - action: labelmap
                    regex: '__meta_kubernetes_pod_label_(.+)'
                  - sourceLabels: [__meta_kubernetes_namespace]
                    action: replace
                    targetLabel: namespace
                  - sourceLabels: [__meta_kubernetes_pod_name]
                    action: replace
                    targetLabel: pod_name

          kubernetes-services-secure-monitor:
            labels:
              monitoring: kube-services-secure
            selector:
              matchExpressions:
                - {key: istio-prometheus-ignore, operator: DoesNotExist}
            namespaceSelector:
              any: true
            jobLabel: kubernetes-services-secure
            endpoints:
              - interval: 15s
                scheme: https
                tlsConfig:
                  caFile: /etc/prometheus/secrets/istio.prometheus/root-cert.pem
                  certFile: /etc/prometheus/secrets/istio.prometheus/cert-chain.pem
                  keyFile: /etc/prometheus/secrets/istio.prometheus/key.pem
                  insecureSkipVerify: true  # prometheus does not support secure naming.
                relabelings:
                  - sourceLabels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                    action: keep
                    regex: 'true'
                  # sidecar status annotation is added by sidecar injector and
                  # istio_workload_mtls_ability can be specifically placed on a pod to indicate its ability to receive mtls traffic.
                  - sourceLabels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_istio_mtls]
                    action: keep
                    regex: '(([^;]+);([^;]*))|(([^;]*);(true))'
                  - sourceLabels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                    action: drop
                    regex: '(http)'
                  - sourceLabels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                    action: replace
                    targetLabel: __metrics_path__
                    regex: '(.+)'
                  - sourceLabels: [__address__]  # Only keep address that is host:port
                    action: keep    # otherwise an extra target with ':443' is added for https scheme
                    regex: '([^:]+):(\d+)'
                  - sourceLabels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                    action: replace
                    regex: '([^:]+)(?::\d+)?;(\d+)'
                    replacement: $1:$2
                    targetLabel: __address__
                  - action: labelmap
                    regex: '__meta_kubernetes_pod_label_(.+)'
                  - sourceLabels: [__meta_kubernetes_namespace]
                    action: replace
                    targetLabel: namespace
                  - sourceLabels: [__meta_kubernetes_pod_name]
                    action: replace
                    targetLabel: pod_name

  ###############################################################################
  ## Ingress ####################################################################
  ## Use Kubernetes raw chart to create a public Istio Gateway                  #
  ## https://github.com/helm/charts/tree/master/incubator/raw                   #
  ###############################################################################
  - name: 'istio-additional'
    chart: "kubernetes-incubator/raw"
    namespace: "istio-system"
    labels:
      component: "iap"
      namespace: "istio-system"
      default: "false"
    version: "0.1.0"
    wait: true
    force: true
    recreatePods: true
    installed: {{ env "ISTIO_INSTALLED" | default "true" }}
    values:
    - resources:
      - apiVersion: networking.istio.io/v1alpha3
        kind: Gateway
        metadata:
          name: istio-ingressgateway
        spec:
          selector:
            istio: ingressgateway
          servers:
            - hosts:
                - "*"
              port:
                name: http
                number: 80
                protocol: HTTP
              tls:
                httpsRedirect: true
            - hosts:
                - "*"
              port:
                name: https
                number: 443
                protocol: HTTP
